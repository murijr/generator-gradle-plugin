plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.9.7'
    id 'net.researchgate.release' version '2.6.0'
    id 'ru.vyarus.quality' version '2.3.0'<% if (mirrorToJcenter) { %>
    id 'com.jfrog.bintray' version '1.7.3'
    id 'ru.vyarus.java-lib' version '1.0.4'<% } %>
    id 'ru.vyarus.github-info' version '1.1.0'
    id 'com.github.ben-manes.versions' version '0.15.0'
}

sourceCompatibility = <%= targetJava %>

wrapper {
    gradleVersion = '4.0.2'
}

repositories { jcenter() }
dependencies {
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude module: 'groovy-all'
    }
}

group = '<%= projectGroup %>'
description = '<%= projectDesc %>'

github {
    user '<%= githubUser %>'
    license 'MIT'
}

<% if (mirrorToJcenter) { %>pom {
    developers {
        developer {
            id '<%= githubUser %>'
            name '<%= authorName %>'
            email '<%= authorEmail %>'
        }
    }
}

bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayKey')
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        repo = '<%= bintrayRepo %>'
        name = project.name
        desc = project.description
        labels = [<%- bintrayTags %>]
        publicDownloadNumbers = true
        version {
            gpg {
                sign = <%= bintraySignFiles %>
                passphrase = findProperty('gpgPassphrase')
            }
            mavenCentralSync {
                sync = <%= mavenCentralSync %>
                user = findProperty('sonatypeUser')
                password = findProperty('sonatypePassword')
            }
        }
    }
}<% } %>

pluginBundle {
    description = '<%= pluginPortalDesc %>'
    tags = [<%- pluginPortalTags %>]

    plugins {
        <%= pluginExtensionName %>Plugin {
            id = '<%= pluginFullName %>'
            displayName = project.description
        }
    }

    <% if (pluginPortalUseCustomGroup) { %>mavenCoordinates {
        groupId = project.group
        artifactId = project.name
    }<% } %>
}

afterReleaseBuild {
    dependsOn = [<% if (mirrorToJcenter) { %>bintrayUpload, <% } %>publishPlugins]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events 'skipped', 'failed', 'standard_error'
        exceptionFormat 'full'
    }
    maxHeapSize = '512m'
}

dependencyUpdates.revision = 'release'
